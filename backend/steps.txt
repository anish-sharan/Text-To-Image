# run following commands in terminal in google colab


$ pip install diffusers transformers torch fastapi uvicorn nest-asyncio pyngrok
$ ngrok authtoken TOKEN

$   import nest_asyncio
    import uvicorn
    from pyngrok import ngrok
    from fastapi import FastAPI, HTTPException
    from fastapi.middleware.cors import CORSMiddleware
    from pydantic import BaseModel
    from diffusers import StableDiffusionPipeline
    import torch
    from PIL import Image
    import base64
    from io import BytesIO

    nest_asyncio.apply()
    app = FastAPI()

    # âœ… Enable CORS
    origins = [
        "*",  # allow all origins (you can restrict later to ["http://localhost:5173", "<ngrok_url>"])
    ]

    app.add_middleware(
        CORSMiddleware,
        allow_origins=origins,
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )

    # Load Stable Diffusion model
    model_id = "runwayml/stable-diffusion-v1-5"
    pipe = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16)
    if torch.cuda.is_available():
        pipe = pipe.to("cuda")
        print("Using CUDA GPU")
    else:
        pipe = pipe.to("cpu")
        print("No CUDA GPU found; using CPU (slower)")

    class PromptRequest(BaseModel):
        prompt: str

    @app.post("/generate-image/")
    async def generate_image(request: PromptRequest):
        try:
            image = pipe(request.prompt, num_inference_steps=50).images[0]
            buffered = BytesIO()
            image.save(buffered, format="PNG")
            img_str = base64.b64encode(buffered.getvalue()).decode("utf-8")
            return {"image": f"data:image/png;base64,{img_str}"}
        except Exception as e:
            raise HTTPException(status_code=500, detail=str(e))

    @app.get("/")
    async def root():
        return {"message": "Text-to-Image Generator API. Use POST /generate-image/ with a prompt."}

    # Start ngrok tunnel
    public_url = ngrok.connect(8000).public_url
    print(f"Public URL: {public_url}")

    # Run FastAPI
    uvicorn.run(app, host="0.0.0.0", port=8000)
